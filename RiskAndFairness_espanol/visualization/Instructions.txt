Instructions: visualization.py

Hello and welcome to the RiskAndFairness visualization tutorial.

In this tutorial, you will learn how to operate the visualize.py script.

This script was made so that you can visualize players choices for a specific mode, over all decisions for that mode.

The script takes in command line arguments. This means when you run the python script, you type in options in the command line.

This is a general form of the way to call the script:
    python3 visualize.py csv_file LEEPS_ID mode optional_display_option optional_output_option

1. The first argument is the csv file. All csv files must be in the form date_session.csv.
    date_session is split into date and session, and both are used in the filenames generated and the titles of the graphs.
    If you give a filename with a format other than x1_x2.csv, an uncontrolled error will be thrown.
    IMPORTANT: when you download the file, make sure to download 'All apps: CSV', as opposed to 'Current session: CSV'

    If the file does not exist in the specified directory, an uncontrolled error will be thrown.

2. The second argument is the id. 
    This is a string LEEPS_1 ... LEEPS_16.
    If there are only 14 people in the experiment and you type LEEPS_15, an uncontrolled error will be thrown.
    If you type anything other than LEEPS_X, where X is a number between 1 and the number of people in the experiment, an uncontrolled error will be thrown

3. The third argument is the mode. There are 8 modes:
    - det_giv (deterministic given), aka single_given
    - sec_1bl_1ch (securities, 1 budget line, 1 choice), aka positive
    - sec_2bl_1ch (securities, 2 budget lines, 1 choice), aka negative
    - sec_ownrisk (securities own risk), aka single
    - sec_ownrisk_fixedother (securities fixed other) aka single_fixedother
    - sec_otherrisk_ownfixed (securities other risk) aka single_ownfixed
    - probability

    All modes except probabiliy generate a single graph with all rounds represented on the same axis.
    Probability mode generates one graph for each round, since multiple probability graphs don't fit on one axis; they are too clunky.

    If you enter a value that is not one of those 8, the behavior is unspecified. Maybe an error will be thrown, maybe nothing will happen.

4. The fourth argument is the display option. It is optional. It has 3 types. If you do not enter one of those three types, an error message
    will be printed and the display will default to gray. The three types are:

    - gray: this prints all lines in the same shade of gray, and all dots in the same shade of orange.
        This is the most minimalistic.

    -color: this prints all lines in a cycle of six predefined colors. All dots are the same color as their corresponding lines.
        This is the least minimalistic, but good for establishing contrast when there are a lot of lines and points that may be close together.

    - coded: this prints lines and dots color coded by probability. The default probability for securities is 50/50. However, if the config.py file
        specifies different probabilities, each probability will have its own color, and a legend will be provided. For securities with more than one
        probability, this is the clearest option. For det_giv, which doesn't involve preset probabilities, this option is the same as color.

    None of these options apply to probability mode: since there is only one line displayed per graph, there is no need to differentiate between
    different lines using colors. All probability graphs are gray with orange bubbles.

5. The fifth argument is the show option. If it is True, the graph/s will be displayed to the terminal and not saved.
    If it is false, the graph/s will be saved to the same directory the function was called from, as png files with a resolution of 250 dots per inch.

    If you give any value other than True of False, an uncontrolled error will be thrown.


Notes
    Example: python3 visualization.py 2018-02-18_S1.csv LEEPS_1 det_giv color True
    Example: python3 visualization.py 2018-02-18_S2.csv LEEPS_10 probability
    If you give no command line args, an example input will default. 
    If you have unanswered questions, email epandolf@ucsc.edu, unless it's after June 2020, in which case email elipandolfo@gmail.com.
